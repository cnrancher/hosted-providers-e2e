aksClusterConfig:
  azureCredentialSecret: ""
  dnsPrefix: ""
  dnsServiceIp: 10.0.0.10
  dockerBridgeCidr: 172.17.0.1/16
  serviceCidr: 10.0.0.0/16
  kubernetesVersion: 1.29.7
  linuxAdminUsername: azureuser
  loadBalancerSku: Standard
  networkPlugin: kubenet
  outboundType: LoadBalancer
  nodePools:
  - availabilityZones:
    - "1"
    - "2"
    - "3"
    enableAutoScaling: false
    maxPods: 110
    mode: System
    name: agentpool
    nodeCount: 1
    osDiskSizeGB: 128
    osDiskType: Managed
    osType: Linux
    vmSize: Standard_DS2_v2
  privateCluster: false
  resourceGroup: ""
  resourceLocation: centralindia
tags: {}
awsCredentials:
azureCredentials:
  environment: AzurePublicCloud
eksClusterConfig:
  kmsKey: ""
  kubernetesVersion: "1.29"
  loggingTypes: []
  nodeGroups:
  - desiredSize: 1
    diskSize: 20
    ec2SshKey: ""
    gpu: false
    imageId: ""
    instanceType: t3.large
    labels: {}
    maxSize: 1
    minSize: 1
    nodeRole: ""
    nodegroupName: ng
    requestSpotInstances: false
    resourceTags: {}
    spotInstanceTypes: []
    subnets: []
    tags: {}
    userData: ""
  privateAccess: false
  publicAccess: true
  publicAccessSources: []
  region: ap-south-1
  secretsEncryption: false
  securityGroups: []
  serviceRole: ""
  subnets: []
  tags: {}
gkeClusterConfig:
  autopilotConfig:
    enabled: false
  clusterAddons:
    horizontalPodAutoscaling: true
    httpLoadBalancing: true
    networkPolicyConfig: false
  clusterIpv4Cidr: ""
  enableKubernetesAlpha: false
  ipAllocationPolicy:
    clusterIpv4CidrBlock: ""
    clusterSecondaryRangeName: ""
    createSubnetwork: false
    nodeIpv4CidrBlock: ""
    servicesIpv4CidrBlock: ""
    servicesSecondaryRangeName: ""
    subnetworkName: ""
    useIpAliases: true
  kubernetesVersion: 1.29.8-gke.1211000
  labels: {}
  locations: []
  loggingService: logging.googleapis.com/kubernetes
  maintenanceWindow: ""
  masterAuthorizedNetworks:
    cidrBlocks: []
    enabled: false
  monitoringService: monitoring.googleapis.com/kubernetes
  network: hosted-providers-ci
  networkPolicyEnabled: false
  nodePools:
  - autoscaling:
      enabled: false
      maxNodeCount: 0
      minNodeCount: 0
    config:
      diskSizeGb: 50
      diskType: pd-standard
      imageType: COS_CONTAINERD
      labels: {}
      localSsdCount: 0
      machineType: n1-standard-2
      oauthScopes:
      - https://www.googleapis.com/auth/devstorage.read_only
      - https://www.googleapis.com/auth/logging.write
      - https://www.googleapis.com/auth/monitoring
      - https://www.googleapis.com/auth/servicecontrol
      - https://www.googleapis.com/auth/service.management.readonly
      - https://www.googleapis.com/auth/trace.append
      preemptible: false
      tags: []
      taints: []
    initialNodeCount: 1
    management:
      autoRepair: true
      autoUpgrade: true
    maxPodsConstraint: 110
    name: np
    version: 1.29.8-gke.1211000
  privateClusterConfig:
    enablePrivateEndpoint: false
    enablePrivateNodes: false
    masterIpv4CidrBlock: ""
  region: ""
  subnetwork: hosted-providers-ci
  zone: asia-south2-c
  projectID: <project>
googleCredentials:
huaweiCredentials:
cceClusterConfig:
  regionID: "ap-southeast-1"
  name: ""
  labels:
  flavor: "cce.s1.small"
  version: "v1.31"
  description: "provisioning test"
  hostNetwork:
    vpcID: ""
    subnetID: ""
    securityGroup: ""
  containerNetwork:
    mode: "vpc-router"
    cidr: "10.16.0.0/16"
  authentication:
  clusterBillingMode: 0
  kubernetesSvcIPRange: "10.43.0.0/24"
  tags:
  kubeProxyMode: "iptables"
  publicAccess: true
  publicIP:
    createEIP: true
    eip:
      ipType: "5_bgp"
      bandwidth:
        chargeMode: "traffic"
        size: 50 # Both download & upload bandwith to 50Mbit
        shareType: "PER"
  nodePools:
  - name: "np-1"
    type: "vm"
    nodeTemplate:
      flavor: "kc1.xlarge.2"
      availableZone: "ap-southeast-1a"
      operatingSystem: "EulerOS 2.9"
      sshKey: "starry"
      rootVolume:
        size: 40
        type: "SSD"
      dataVolumes:
      - size: 100
        type: "SSD"
      billingMode: 0
      runtime: "containerd"
    initialNodeCount: 2 # The replicas of coredns & csi controller on cce is 2
rancher:
  cleanup: false
  insecure: true
